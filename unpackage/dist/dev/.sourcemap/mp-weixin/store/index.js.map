{"version":3,"file":"index.js","sources":["store/index.js"],"sourcesContent":["// store/index.js\nimport { createStore } from 'vuex'\r\nimport $C from '@/common/config.js';\r\nimport $http from '@/common/request.js';\r\nimport $U from '@/common/utill.js';\n\n// 创建 Vuex store 实例（Vue3 风格）\nexport default createStore({\n\tstate:{\r\n\t\t// 登录\r\n\t\tloginStatus:false,\r\n\t\ttoken:false,\r\n\t\tuser:{\r\n\t\t\t// \"id\": 7,\r\n\t\t\t// \"username\": \"zcmcss\",\r\n\t\t\t// \"userpic\": \"https://tangzhe123-com.oss-cn-shenzhen.aliyuncs.com/Appstatic/qsbk/demo/userpic/1.jpg\",\r\n\t\t\t// \"password\": true,\r\n\t\t\t// \"phone\": \"13450772004\",\r\n\t\t\t// \"email\": \"123@qq.com\",\r\n\t\t\t// \"status\": 1,\r\n\t\t\t// \"create_time\": null,\r\n\t\t\t// \"logintype\": \"username\",\r\n\t\t\t// \"token\": \"a8bb3f6f50ff5049d70b6022b48e1f45c24a96f8\",\r\n\t\t\t// \"userinfo\": {\r\n\t\t\t// \t\"id\": 1,\r\n\t\t\t// \t\"user_id\": 7,\r\n\t\t\t// \t\"age\": 23,\r\n\t\t\t// \t\"sex\": 1,\r\n\t\t\t// \t\"qg\": 1,\r\n\t\t\t// \t\"job\": \"IT\",\r\n\t\t\t// \t\"path\": \"北京市-市辖区-朝阳区\",\r\n\t\t\t// \t\"birthday\": \"1996-06-12\"\r\n\t\t\t// },\r\n\t\t\t// user_bind:{\r\n\t\t\t// \t\"qq\": {\r\n\t\t\t// \t\t\"id\": 229,\r\n\t\t\t// \t\t\"nickname\": \"airson\"\r\n\t\t\t// \t}\r\n\t\t\t// }\r\n\t\t},\r\n\t\t\r\n\t\t// Socket连接状态\r\n\t\tIsOpen:false,\r\n\t\t// SocketTask\r\n\t\tSocketTask:false,\r\n\t\t// 是否上线（会员id绑定客户端id，验证用户身份，通过则绑定）\r\n\t\tIsOnline:false, \r\n\t\t// 当前聊天对象（进入聊天页面获取）\r\n\t\tToUser:{\r\n\t\t\tuser_id:0, // 通过判断user_id是否为0，当前用户处在什么场景下\r\n\t\t\tusername:\"\",\r\n\t\t\tuserpic:\"\"\r\n\t\t},\r\n\t\t// 聊天会话列表\r\n\t\tchatList:[]\r\n\t},\r\n\tgetters:{\r\n\t\t// 总未读数\r\n\t\ttotalNoread(state){\r\n\t\t\tlet total = 0\r\n\t\t\tstate.chatList.forEach(item=>{\r\n\t\t\t\ttotal += item.noread\r\n\t\t\t})\r\n\t\t\treturn total\r\n\t\t}\r\n\t},\r\n\tmutations:{\r\n\t\t// 创建聊天对象\r\n\t\tcreateToUser(state,ToUser){\r\n\t\t\tstate.ToUser = ToUser\r\n\t\t},\r\n\t\t// 关闭聊天对象\r\n\t\tcloseToUser(state){\r\n\t\t\tstate.ToUser = {\r\n\t\t\t\tuser_id:0, \r\n\t\t\t\tusername:\"\",\r\n\t\t\t\tuserpic:\"\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t// 登录\r\n\t\tlogin(state,user){\r\n\t\t\tstate.loginStatus = true\r\n\t\t\tstate.user = user\r\n\t\t\tstate.token = state.user.token\r\n\t\t\tuni.setStorageSync('user', JSON.stringify(user));\r\n\t\t\tuni.$emit('updateIndex')\r\n\t\t},\r\n\t\t// 退出登录\r\n\t\tlogout(state){\r\n\t\t\tstate.loginStatus = false\r\n\t\t\tstate.user = {}\r\n\t\t\tstate.token = false\r\n\t\t\tuni.removeStorageSync('user');\r\n\t\t\tuni.$emit('updateIndex')\r\n\t\t},\r\n\t\t// 修改用户信息(手机号,邮箱,密码)\r\n\t\teditUserInfo(state,{ key,value }){\r\n\t\t\tstate.user[key] = value\r\n\t\t\tuni.setStorageSync('user', JSON.stringify(state.user));\r\n\t\t},\r\n\t\t// 修改资料\r\n\t\teditUserUserInfo(state,obj){\r\n\t\t\tif(state.user.userinfo){\r\n\t\t\t\tstate.user.userinfo.sex = obj.sex\r\n\t\t\t\tstate.user.userinfo.qg = obj.qg\r\n\t\t\t\tstate.user.userinfo.job = obj.job\r\n\t\t\t\tstate.user.userinfo.path = obj.path\r\n\t\t\t\tstate.user.userinfo.birthday = obj.birthday\r\n\t\t\t\tuni.setStorageSync('user', JSON.stringify(state.user));\r\n\t\t\t}\r\n\t\t},\r\n\t\t// 存储会话列表\r\n\t\tsaveChatList(state,list){\r\n\t\t\tuni.setStorageSync('chatlist_'+state.user.id,JSON.stringify(list))\r\n\t\t},\r\n\t\t// 删除会话列表\r\n\t\tclearChatList(state,list){\r\n\t\t\tuni.removeStorageSync('chatlist_'+state.user.id)\r\n\t\t\tstate.chatList = []\r\n\t\t},\r\n\t\t// 存储与某个用户聊天内容列表\r\n\t\tsaveChatDetail(state,{list,toId}){\r\n\t\t\t// chatdetail_[当前用户id]_[聊天对象id]\r\n\t\t\tlet myId = state.user.id\r\n\t\t\ttoId = toId ? toId : state.ToUser.user_id\r\n\t\t\tlet key = 'chatdetail_'+myId+'_'+toId\r\n\t\t\tuni.setStorageSync(key,JSON.stringify(list))\r\n\t\t},\r\n\t},\r\n\tactions:{\r\n\t\t// 初始化登录状态\r\n\t\tinitUser({state,dispatch}){\r\n\t\t\tlet user = uni.getStorageSync('user');\r\n\t\t\tif(user){\r\n\t\t\t\tstate.user = JSON.parse(user)\r\n\t\t\t\tstate.loginStatus = true\r\n\t\t\t\tstate.token = state.user.token\r\n\t\t\t\t// 打开socket\r\n\t\t\t\tdispatch('openSocket')\r\n\t\t\t}\r\n\t\t},\r\n\t\t// 关闭socket\r\n\t\tcloseSocket({state}){\r\n\t\t\tif (state.IsOpen){\r\n\t\t\t\tstate.SocketTask.close();\r\n\t\t\t}\r\n\t\t},\r\n\t\t// 打开socket\r\n\t\topenSocket({ state,dispatch }){\r\n\t\t\t// 防止重复连接\r\n\t\t\tif(state.IsOpen) return\r\n\t\t\t// 连接\r\n\t\t\tstate.SocketTask = uni.connectSocket({\r\n\t\t\t    url: $C.websocketUrl,\r\n\t\t\t    complete: ()=> {}\r\n\t\t\t});\r\n\t\t\tif (!state.SocketTask) return;\r\n\t\t\t// 监听开启\r\n\t\t\tstate.SocketTask.onOpen(()=>{\r\n\t\t\t\t// 将连接状态设为已连接\r\n\t\t\t\tconsole.log('将连接状态设为已连接');\r\n\t\t\t\tstate.IsOpen = true\r\n\t\t\t})\r\n\t\t\t// 监听关闭\r\n\t\t\tstate.SocketTask.onClose(()=>{\r\n\t\t\t\tconsole.log('连接已关闭');\r\n\t\t\t\tstate.IsOpen = false;\r\n\t\t\t\tstate.SocketTask = false;\r\n\t\t\t\tstate.IsOnline = false\r\n\t\t\t\t// 清空会话列表\r\n\t\t\t\t// 更新未读数提示\r\n\t\t\t})\r\n\t\t\t// 监听错误\r\n\t\t\tstate.SocketTask.onError(()=>{\r\n\t\t\t\tconsole.log('连接错误');\r\n\t\t\t\tstate.IsOpen = false;\r\n\t\t\t\tstate.SocketTask = false;\r\n\t\t\t\tstate.IsOnline = false\r\n\t\t\t})\r\n\t\t\t// 监听接收信息\r\n\t\t\tstate.SocketTask.onMessage((e)=>{\r\n\t\t\t\tconsole.log('接收消息',e);\r\n\t\t\t\t// 字符串转json\r\n\t\t\t\tlet res = JSON.parse(e.data);\r\n\t\t\t\t// 绑定返回结果\r\n\t\t\t\tif (res.type == 'bind'){\r\n\t\t\t\t\t// 用户绑定\r\n\t\t\t\t\treturn dispatch('userBind',res.data)\r\n\t\t\t\t}\r\n\t\t\t\t// 处理接收信息\r\n\t\t\t\tif (res.type !== 'text') return;\r\n\t\t\t\t/*\r\n\t\t\t\t{\r\n\t\t\t\t\tto_id:1,      // 接收人 \r\n\t\t\t\t\tfrom_id:12,\t  // 发送人id\r\n\t\t\t\t\tfrom_username:\"某某\",  // 发送人昵称\r\n\t\t\t\t\tfrom_userpic:\"http://pic136.nipic.com/file/20170725/10673188_152559977000_2.jpg\",\r\n\t\t\t\t\ttype:\"text\",\t // 发送类型\r\n\t\t\t\t\tdata:\"你好啊\",\t // 发送内容\r\n\t\t\t\t\ttime:151235451   // 接收到的时间\r\n\t\t\t\t}\r\n\t\t\t\t*/\r\n\t\t\t   // 处理接收消息\r\n\t\t\t   dispatch('handleChatMessage',res)\r\n\t\t\t})\r\n\t\t},\r\n\t\t// 用户绑定\r\n\t\tuserBind({state,dispatch},client_id){\r\n\t\t\t$http.post('/chat/bind',{\r\n\t\t\t\ttype:\"bind\",\r\n\t\t\t\tclient_id:client_id\r\n\t\t\t},{\r\n\t\t\t\ttoken:true\r\n\t\t\t}).then(data=>{\r\n\t\t\t\t/*\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"type\":\"bind\",\r\n\t\t\t\t\t\t\"status\":true\r\n\t\t\t\t\t}\r\n\t\t\t\t*/\r\n\t\t\t\tconsole.log('绑定成功',data);\r\n\t\t\t\t// 开始上线\r\n\t\t\t\tif(data.status && data.type === 'bind'){\r\n\t\t\t\t\t// 改为上线状态\r\n\t\t\t\t\tstate.IsOnline = true\r\n\t\t\t\t\t// 初始化会话列表\r\n\t\t\t\t\tdispatch('initChatList')\r\n\t\t\t\t\t// 获取未读信息\r\n\t\t\t\t\tdispatch('getUnreadMessages')\r\n\t\t\t\t}\r\n\t\t\t}).catch(err=>{\r\n\t\t\t\t// 失败 退出登录，重新链接等处理\r\n\t\t\t})\r\n\t\t},\r\n\t\t// 获取未读信息\r\n\t\tgetUnreadMessages({state,dispatch}){\r\n\t\t\tconsole.log('获取未读信息中...');\r\n\t\t\t$http.post('/chat/get',{},{\r\n\t\t\t\ttoken:true,\r\n\t\t\t}).then((data)=>{\r\n\t\t\t\tconsole.log('获取未读信息成功',data);\r\n\t\t\t\tdata.forEach(msg=>{\r\n\t\t\t\t\t// 处理接收消息\r\n\t\t\t\t\tdispatch('handleChatMessage',msg)\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t},\r\n\t\t// 初始化会话列表\r\n\t\tasync initChatList({state,dispatch,commit}){\r\n\t\t\tstate.chatList = await dispatch('getChatList')\r\n\t\t\tconsole.log('初始化会话列表',state.chatList);\r\n\t\t\tdispatch('updateTabbarBadge')\r\n\t\t},\r\n\t\t// 处理接收消息\r\n\t\thandleChatMessage({state,dispatch},data){\r\n\t\t\tconsole.log('处理接收消息',data);\r\n\t\t\t// 全局通知接口\r\n\t\t\tuni.$emit('UserChat',data);\r\n\t\t\t// 存储到chatdetail\r\n\t\t\tdispatch('updateChatDetailToUser',{\r\n\t\t\t\tdata,\r\n\t\t\t\tsend:false\r\n\t\t\t})\r\n\t\t\t// 更新会话列表\r\n\t\t\tdispatch('updateChatList',{\r\n\t\t\t\tdata,\r\n\t\t\t\tsend:false\r\n\t\t\t})\r\n\t\t},\r\n\t\t// 更新聊天会话列表\r\n\t\tasync updateChatList({state,dispatch,commit},{data,send}){\r\n\t\t\tconsole.log('更新聊天会话列表',data);\r\n\t\t\t// 是否是本人发送\r\n\t\t\tlet isMySend = send\r\n\t\t\tconsole.log(isMySend ? '本人发送的信息' : '不是本人发送的');\r\n\t\t\t// 获取之前会话\r\n\t\t\tlet chatList = await dispatch('getChatList')\r\n\t\t\t// 判断是否已存在该会话，存在：将当前会话置顶；不存在：创建并追加至头部\r\n\t\t\tlet i = chatList.findIndex((v)=>{\r\n\t\t\t\treturn v.user_id == data.to_id || v.user_id == data.from_id;\r\n\t\t\t})\r\n\t\t\t// 不存在,创建会话\r\n\t\t\tif(i === -1){\r\n\t\t\t\t// 接收到的消息转会话\r\n\t\t\t\tlet obj = await dispatch('formatChatListObject',{\r\n\t\t\t\t\tdata,\r\n\t\t\t\t\tsend\r\n\t\t\t\t})\r\n\t\t\t\t// 忽略本人发送\r\n\t\t\t\tif (!isMySend) {\r\n\t\t\t\t\tobj.noread = 1;\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log('不存在当前会话,创建',obj);\r\n\t\t\t\t// 追加头部\r\n\t\t\t\tchatList.unshift(obj);\r\n\t\t\t} else {\r\n\t\t\t\t// 存在：将当前会话置顶,修改当前会话的data和time显示\r\n\t\t\t\tlet item = chatList[i]\r\n\t\t\t\titem.data = data.data\r\n\t\t\t\titem.type = data.type\r\n\t\t\t\titem.time = data.time\r\n\t\t\t\t// 当前聊天对象不是该id，未读数+1（排除本人发送消息）\r\n\t\t\t\tif(!isMySend && state.ToUser.user_id !== item.user_id){\r\n\t\t\t\t\titem.noread++\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log('存在当前会话',item);\r\n\t\t\t\t// 置顶当前会话\r\n\t\t\t\tchatList = $U.__toFirst(chatList,i)\r\n\t\t\t}\r\n\t\t\t// 存储到本地存储\r\n\t\t\tstate.chatList = chatList\r\n\t\t\tcommit('saveChatList',chatList)\r\n\t\t\t// 不处于聊天当中,更新未读数\r\n\t\t\tif(data.from_id !== state.ToUser.user_id && !isMySend){\r\n\t\t\t\tawait dispatch('updateTabbarBadge')\r\n\t\t\t}\r\n\t\t},\r\n\t\t// 获取所有聊天会话列表\r\n\t\tgetChatList({state}){\r\n\t\t\tlet list = uni.getStorageSync('chatlist_'+state.user.id);\r\n\t\t\treturn list ? JSON.parse(list) : []\r\n\t\t},\r\n\t\t// 获取与某个用户聊天内容列表\r\n\t\tgetChatDetailToUser({state},toId = 0){\r\n\t\t\t// chatdetail_[当前用户id]_[聊天对象id]\r\n\t\t\tlet myId = state.user.id\r\n\t\t\ttoId = toId ? toId : state.ToUser.user_id\r\n\t\t\tlet key = 'chatdetail_'+myId+'_'+toId\r\n\t\t\tlet list = uni.getStorageSync(key)\r\n\t\t\treturn list ? JSON.parse(list) : []\r\n\t\t},\r\n\t\t// 消息转聊天会话对象\r\n\t\tformatChatListObject({state},{data,send}){\r\n\t\t\t// 接收消息\r\n\t\t\treturn {\r\n\t\t\t\tuser_id:send ? state.ToUser.user_id : data.from_id,\r\n\t\t\t\tavatar:send ? state.ToUser.avatar : data.from_userpic,\r\n\t\t\t\tusername:send ? state.ToUser.username : data.from_username,\r\n\t\t\t\tupdate_time:data.time, // 最新消息时间戳\r\n\t\t\t\tdata:data.data,\r\n\t\t\t\tnoread:0  // 未读数\r\n\t\t\t}\r\n\t\t},\r\n\t\t// 消息转对话对象\r\n\t\tformatChatDetailObject({state},e){\r\n\t\t\tlet data = e.data\r\n\t\t\tconsole.log('formatChatDetailObject');\r\n\t\t\tconsole.log(e);\r\n\t\t\treturn {\r\n\t\t\t\tuser_id:e.send ? state.user.id : data.from_id,\r\n\t\t\t\tavatar:e.send ? state.user.userpic : data.from_userpic,\r\n\t\t\t\tusername:e.send ? state.user.username:data.from_username,\r\n\t\t\t\tdata:data.data,\r\n\t\t\t\ttype:data.type, \r\n\t\t\t\tcreate_time:new Date().getTime()\r\n\t\t\t}\r\n\t\t},\r\n\t\t// 更新未读数\r\n\t\tupdateTabbarBadge({state,getters}){\r\n\t\t\tlet total = getters.totalNoread\r\n\t\t\tconsole.log('更新未读数',total);\r\n\t\t\t// 未读数为0,移除\r\n\t\t\tif(total === 0){\r\n\t\t\t\tconsole.log('移除未读数');\r\n\t\t\t\treturn uni.removeTabBarBadge({\r\n\t\t\t\t\tindex:2\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tconsole.log('设置未读数',total);\r\n\t\t\tuni.setTabBarBadge({\r\n\t\t\t\tindex:2,\r\n\t\t\t\ttext: total > 99 ? '99+' : total.toString()\r\n\t\t\t});\r\n\t\t},\r\n\t\t// 更新与某个用户聊天内容列表\r\n\t\tasync updateChatDetailToUser({state,dispatch,commit},e){\r\n\t\t\t console.log('更新与某个用户聊天内容列表',e);\r\n\t\t\t let data = e.data\r\n\t\t\t let toId = e.send ? state.ToUser.user_id : data.from_id\r\n\t\t\t // 获取与某个用户聊天内容的历史记录\r\n\t\t\t let list = await dispatch('getChatDetailToUser',toId)\r\n\t\t\t list.push(await dispatch('formatChatDetailObject',e))\r\n\t\t\t // 存储到本地存储\r\n\t\t\t commit('saveChatDetail',{\r\n\t\t\t \tlist,toId\r\n\t\t\t })\r\n\t\t},\r\n\t\t// 发送消息\r\n\t\tasync sendChatMessage({dispatch},data){\r\n\t\t\t/*\r\n\t\t\t{\r\n\t\t\t\tdata:\"发送内容\",\r\n\t\t\t\ttype:\"text\"\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tconsole.log('发送消息');\r\n\t\t\t// 组织发送消息格式\r\n\t\t\tlet sendData = await dispatch('formatSendData',data)\r\n\t\t\tconsole.log('发送消息数据格式',sendData);\r\n\t\t\t/*\r\n\t\t\t{\r\n\t\t\t\tto_id:1,      // 接收人 \r\n\t\t\t\tfrom_id:12,\t  // 发送人id\r\n\t\t\t\tfrom_username:\"某某\",  // 发送人昵称\r\n\t\t\t\tfrom_userpic:\"http://pic136.nipic.com/file/20170725/10673188_152559977000_2.jpg\",\r\n\t\t\t\ttype:\"text\",\t // 发送类型\r\n\t\t\t\tdata:\"你好啊\",\t // 发送内容\r\n\t\t\t\ttime:151235451   // 接收到的时间\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t   // 更新与某个用户的消息历史记录\r\n\t\t   dispatch('updateChatDetailToUser',{\r\n\t\t   \t data:sendData,\r\n\t\t   \t send:true\r\n\t\t   })\r\n\t\t   // 更新会话列表\r\n\t\t   dispatch('updateChatList',{\r\n\t\t\t   data:sendData,\r\n\t\t\t   send:true\r\n\t\t   })\r\n\t\t   return sendData\r\n\t\t},\r\n\t\t// 组织发送格式\r\n\t\tformatSendData({state},data){\r\n\t\t\treturn {\r\n\t\t\t\tto_id:state.ToUser.user_id,\r\n\t\t\t\tfrom_id:state.user.id,\r\n\t\t\t\tfrom_username:state.user.username,\r\n\t\t\t\tfrom_userpic:state.user.userpic ? state.user.userpic : '/static/default.jpg',\r\n\t\t\t\ttype:data.type,\r\n\t\t\t\tdata:data.data,\r\n\t\t\t\ttime:new Date().getTime()\r\n\t\t\t}\r\n\t\t},\r\n\t\t// 读取当前会话(去除未读数,更新tabbar)\r\n\t\treadChatMessage({state,commit,dispatch},item){\r\n\t\t\t/*\r\n\t\t\t{\r\n\t\t\t\t\"user_id\": 331,\r\n\t\t\t\t\"avatar\": \"/static/default.jpg\",\r\n\t\t\t\t\"username\": \"13450772004\",\r\n\t\t\t\t\"update_time\": 1578216988,\r\n\t\t\t\t\"data\": \"看看有么有移除\",\r\n\t\t\t\t\"noread\": 0,\r\n\t\t\t\t\"type\": \"text\",\r\n\t\t\t\t\"time\": 1578226151777\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t\tconsole.log('读取当前会话(去除未读数,更新tabbar)',item);\r\n\t\t\t// 没有未读信息\r\n\t\t\tif (item.noread === 0) return;\r\n\t\t\t// 拿到当前会话 设置未读数为0\r\n\t\t\tstate.chatList.forEach((v)=>{\r\n\t\t\t\tif(v.user_id == item.user_id){\r\n\t\t\t\t\tv.noread = 0\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t// 存储\r\n\t\t\tcommit('saveChatList',state.chatList)\r\n\t\t\t// 更新未读数\r\n\t\t\tdispatch('updateTabbarBadge')\r\n\t\t},\r\n\t}\n})"],"names":["createStore","uni","$C","$http","$U"],"mappings":"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"}